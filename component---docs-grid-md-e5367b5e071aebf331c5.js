(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"0bzj":function(t,e,n){"use strict";n.r(e),n.d(e,"_frontmatter",(function(){return s})),n.d(e,"default",(function(){return b}));n("91GP"),n("rGqo"),n("yt8O"),n("Btvt"),n("RW0V"),n("FlsD"),n("q1tI");var i=n("7ljp"),l=n("hhGP");n("qKvR");function r(){return(r=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var n=arguments[e];for(var i in n)Object.prototype.hasOwnProperty.call(n,i)&&(t[i]=n[i])}return t}).apply(this,arguments)}var s={};void 0!==s&&s&&s===Object(s)&&Object.isExtensible(s)&&!s.hasOwnProperty("__filemeta")&&Object.defineProperty(s,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/grid.md"}});var o={_frontmatter:s},a=l.a;function b(t){var e=t.components,n=function(t,e){if(null==t)return{};var n,i,l={},r=Object.keys(t);for(i=0;i<r.length;i++)n=r[i],e.indexOf(n)>=0||(l[n]=t[n]);return l}(t,["components"]);return Object(i.b)(a,r({},o,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("h1",{id:"grid"},"Grid"),Object(i.b)("h3",{id:"overview"},"Overview"),Object(i.b)("p",null,"Grid is a control that contains a list organized by columns, where each column can receive an individual size and an alignment."),Object(i.b)("h3",{id:"source-code"},"Source Code"),Object(i.b)("pre",null,Object(i.b)("code",r({parentName:"pre"},{className:"language-java"}),'import totalcross.sys.Settings;\nimport totalcross.ui.Button;\nimport totalcross.ui.Grid;\nimport totalcross.ui.MainWindow;\nimport totalcross.ui.dialog.MessageBox;\nimport totalcross.util.UnitsConverter;\nimport java.util.ArrayList;\n\npublic class GridSample extends MainWindow {\n\n    private final int H = 225;\n    private ArrayList<User> users = new ArrayList<>();\n    private Grid grid;\n    private Button loadButton;\n    private int GAP = UnitsConverter.toPixels(DP + 8);\n\n    public GridSample(){\n        setUIStyle(Settings.Material);\n    }\n\n    @Override\n    public void initUI() {\n        String[] gridCaptions = { "Name", "Phone", "Email" };\n        int gridWidths[] = { -35, -35, -30 };\n        int gridAligns[] = { LEFT, LEFT, LEFT };\n\n        grid = new Grid(gridCaptions, gridWidths, gridAligns, false);\n        grid.verticalLineStyle = Grid.VERT_LINE;\n\n        loadButton = new Button("Load");\n\n        add(grid, LEFT + GAP, TOP + GAP, FILL - GAP, FILL - GAP * 9);\n        add(loadButton, LEFT + GAP, BOTTOM - GAP, FILL - GAP, PREFERRED);\n\n        loadButton.addPressListener( e -> {\n\n            for (int i = 0; i < 5; i++) {\n                users.add(new User("Joao ","99999999","joao@j.com","12345678"));\n            }\n\n            if (users.size() > 0) {\n                String items[][] = new String[users.size()][3];\n                for (int i = 0; i < users.size(); i++) {\n                    User user = users.get(i);\n                    items[i] = new String[] { user.getName(), user.getPhone(), user.getMail() };\n                }\n                grid.setItems(items);\n            } else {\n                MessageBox mb = new MessageBox("Message", "No registered users.", new String[] { "Close" });\n                mb.popup();\n            }\n        });\n    }\n\n    public class User {\n\n        private String name;\n        private String phone;\n        private String mail;\n        private String password;\n\n        public User() {\n\n        }\n\n        public User(String name, String phone, String mail, String password) {\n            this.name = name;\n            this.phone = phone;\n            this.mail = mail;\n            this.password = password;\n        }\n\n        public String getName() {\n            return name;\n        }\n        public void setName(String name) {\n            this.name = name;\n        }\n        public String getPhone() {\n            return phone;\n        }\n        public void setPhone(String phone) {\n            this.phone = phone;\n        }\n        public String getMail() {\n            return mail;\n        }\n        public void setMail(String mail) {\n            this.mail = mail;\n        }\n        public String getPassword() {\n            return password;\n        }\n        public void setPassword(String password) {\n            this.password = password;\n        }\n\n    }\n}\n\n\n')),Object(i.b)("h3",{id:"methods"},"Methods"),Object(i.b)("table",null,Object(i.b)("thead",null,Object(i.b)("tr",null,Object(i.b)("th",{style:{textAlign:"left"}},"Type"),Object(i.b)("th",{style:{textAlign:"left"}},"Name"),Object(i.b)("th",{style:{textAlign:"left"}},"Description"))),Object(i.b)("tbody",null,Object(i.b)("tr",null,Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("b",null,"Constructor")),Object(i.b)("td",{style:{textAlign:"left"}},"Grid(String[] captions, int[] widths, int[] aligns, boolean checkEnabled)"),Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("p",null,"Captions for the columns. Cannot be null;"),Object(i.b)("p",null),Object(i.b)("p",null,"Widths of the columns. If the total width is less than the grid's width,",Object(i.b)("br",null),"the last column will fill until the grid width;"),Object(i.b)("p",null),Object(i.b)("p",null,"Alignment of information on the given column;"),Object(i.b)("p",null),Object(i.b)("p",null,"checkEnabled is True if you want the multi-selection check column;"),Object(i.b)("p",null))),Object(i.b)("tr",null,Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("b",null,"Constructor")),Object(i.b)("td",{style:{textAlign:"left"}},"Grid(String[] captions, boolean checkEnabled)"),Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("p",null,"Captions for the columns;",Object(i.b)("br",null),"checkEnabled is True if you want the multi-selection check column;"),Object(i.b)("p",null))),Object(i.b)("tr",null,Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("b",null,"Void")),Object(i.b)("td",{style:{textAlign:"left"}},"setItems(String[][] items)"),Object(i.b)("td",{style:{textAlign:"left"}},"Sets the grid items to be displayed.")),Object(i.b)("tr",null,Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("b",null,"Void")),Object(i.b)("td",{style:{textAlign:"left"}},"setDataSource(DataSource ds, int nrItems)"),Object(i.b)("td",{style:{textAlign:"left"}},"Sets the data source of this grid to be the given one.")),Object(i.b)("tr",null,Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("b",null,"Void")),Object(i.b)("td",{style:{textAlign:"left"}},"add(String[] item)"),Object(i.b)("td",{style:{textAlign:"left"}},"Add a new line.")),Object(i.b)("tr",null,Object(i.b)("td",{style:{textAlign:"left"}},Object(i.b)("b",null,"Void")),Object(i.b)("td",{style:{textAlign:"left"}},"add(String[] item, int row)"),Object(i.b)("td",{style:{textAlign:"left"}},"Add a new line at the given index position of the grid.")))),"â€Œ",Object(i.b)("h3",{id:"references"},"References"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},"See the ",Object(i.b)("a",r({parentName:"li"},{href:"https://github.com/TotalCross/TCSample/blob/master/src/main/java/totalcross/sample/components/ui/GridSample.java"}),"github")," sample."),Object(i.b)("li",{parentName:"ul"},"See the ",Object(i.b)("a",r({parentName:"li"},{href:"https://rs.totalcross.com/doc/totalcross/ui/Grid.html"}),"Java Docs")," for more information.")))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/grid.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-grid-md-e5367b5e071aebf331c5.js.map