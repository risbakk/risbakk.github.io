{"version":3,"sources":["webpack:///./docs/aligned-labels-container.md","webpack:///./docs/assets/alignedlabels-sample.gif.pagespeed.ce.d4badoy8p.gif"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","alt","src","require","isMDXComponent","module","exports"],"mappings":"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","file":"component---docs-aligned-labels-container-md-60f8a53eee52a2968f17.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/nrisbakk/Projects/newTC/totalcross-page/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"aligned-labels\"\n    }}>{`Aligned Labels`}</h1>\n    <h3 {...{\n      \"id\": \"overview\"\n    }}>{`Overview`}</h3>\n    <p>{`Aligned Label is a Container used to align all controls to the maximum width of a set of labels.\n{% hint style=\"info\" %}\nIn Totalcross this component is called `}<strong parentName=\"p\"><inlineCode parentName=\"strong\">{`AlignedLabelContainer`}</inlineCode></strong>{`.\n{% endhint %}`}</p>\n    <p><img alt=\"aligned label animation\" src={require(\"./assets/alignedlabels-sample.gif.pagespeed.ce.d4badoy8p.gif\")} /></p>\n    <h3 {...{\n      \"id\": \"source-code\"\n    }}>{`Source Code`}</h3>\n    <p>{`{% code title=\"AlignedLabelsSample.java\" %}`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-java\"\n      }}>{`import totalcross.ui.AlignedLabelsContainer;\nimport totalcross.ui.Button;\nimport totalcross.ui.ComboBox;\nimport totalcross.ui.Edit;\nimport totalcross.ui.Label;\nimport totalcross.ui.ListBox;\nimport totalcross.ui.ScrollContainer;\nimport totalcross.util.UnitsConverter;\n\npublic class extends ScrollContainer {\n    private int gap = UnitsConverter.toPixels(10 + DP);\n    private boolean canInsert = true;\n    private ListBox lb;\n    private Label output;\n\n    @Override\n    public void initUI() {\n        uiAdjustmentsBasedOnFontHeightIsSupported = false;\n        setBackForeColors(0xF7F7F7, 0x000000);\n        setScrollBars(false, true);\n\n        String[] labels = { \"Name\", \"Born date\", \"Telephone\", \"Address\", \"City\", \"Country\" };\n        Edit edits[] = new Edit[5];\n        edits[0].transparentBackground = true;\n        Edit.useNativeNumericPad = true;\n\n        for (int i = 0; i < edits.length; i++) {\n            switch (i) {\n            case 1:\n                edits[i] = new Edit(\"99/99/9999\");\n                edits[i].setMode(Edit.NORMAL, true);\n                edits[i].setValidChars(Edit.numbersSet);\n                edits[i].setKeyboard(Edit.KBD_NUMERIC);\n                break;\n            case 2:\n                edits[i] = new Edit(\"(99)9999-99999\");\n                edits[i].setMode(Edit.NORMAL, true);\n                edits[i].setValidChars(Edit.numbersSet);\n                edits[i].setKeyboard(Edit.KBD_NUMERIC);\n                break;\n            default:\n                edits[i] = new Edit();\n            }\n        }\n\n        Label title = new Label(\"This is an AlignedLabelsContainer.\\\\nAll the content will be automatically aligned.\",\n                CENTER, 0, true);\n        title.autoSplit = true;\n        add(title, LEFT + gap, TOP + gap, FILL - gap, PREFERRED);\n\n        AlignedLabelsContainer alc = new AlignedLabelsContainer();\n        alc.uiAdjustmentsBasedOnFontHeightIsSupported = false;\n        alc.labelAlign = RIGHT;\n\n        alc.setInsets(gap, gap, 0, 0);\n        alc.setLabels(labels, edits[0].getPreferredHeight());\n        add(alc, LEFT, AFTER, FILL, PREFERRED);\n        int i;\n        for (i = 0; i < edits.length - 1; i++) {\n            alc.add(edits[i], LEFT + gap, alc.getLineY(i), FILL - gap, PREFERRED);\n        }\n\n        Button btnInsert = new Button(\"Insert data\", (byte) 0);\n        btnInsert.setBackForeColors(0x4583d4, 0xFFFFFF);\n        alc.add(edits[edits.length - 1], LEFT + gap, alc.getLineY(i), edits[3].getWidth() / 2 - gap / 2, PREFERRED);\n        alc.add(btnInsert, RIGHT - gap, CENTER_OF, SAME, PREFERRED, edits[edits.length - 1]);\n\n        ComboBox cbCountry = new ComboBox(new String[] { \"Brazil\", \"USA\" });\n        alc.add(cbCountry, LEFT + gap, alc.getLineY(++i), SAME, PREFERRED, edits[edits.length - 1]);\n\n        Button btnClear = new Button(\"CLEAR DATA\", (byte) 0);\n        alc.add(btnClear, RIGHT - gap, CENTER_OF, SAME, PREFERRED);\n\n        btnInsert.addPressListener(e -> {\n            if (canInsert) {\n                lb = new ListBox();\n                for (int j = 0; j < edits.length; j++)\n                    lb.add(labels[j] + \": \" + edits[j].getText());\n                if (cbCountry.getSelectedIndex() != -1)\n                    lb.add(\"Country: \" + cbCountry.getSelectedItem());\n                else\n                    lb.add(\"Country: \");\n\n                output = new Label(\"OUTPUT:\");\n                output.setFont(font.asBold());\n                add(output, CENTER, AFTER);\n                add(lb, CENTER, AFTER + gap, SCREENSIZE + 80, PREFERRED);\n                canInsert = false;\n\n                scrollToControl(lb);\n            } else {\n                lb.removeAll();\n                for (int j = 0; j < edits.length; j++)\n                    lb.add(labels[j] + \": \" + edits[j].getText());\n                if (cbCountry.getSelectedIndex() != -1)\n                    lb.add(\"Country: \" + cbCountry.getSelectedItem());\n                else\n                    lb.add(\"Country: \");\n            }\n            // reposition(); reposition bugando o edit\n        });\n\n        btnClear.addPressListener(e -> {\n\n            // Cleaning the labels' content\n            for (Edit edit : edits)\n                edit.clear();\n            cbCountry.setSelectedIndex(-1);\n            if (!canInsert) {\n                // Cleaning the output\n                remove(lb);\n                remove(output);\n                canInsert = true;\n            }\n        });\n    }\n}\n`}</code></pre>\n    <p>{`{% endcode %}`}</p>\n    <h3 {...{\n      \"id\": \"attributes\"\n    }}>{`Attributes`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Font`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`childrenFont`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Set this member to the font you want to set to the controls that are added to this container`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}{`[`}{` `}{`]`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`foreColors`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets an array with the same number of labels and the colors you want to show for each label`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`labelAlign`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`The alignment of the labels`}</td>\n        </tr>\n      </tbody>\n    </table>\n    <h3 {...{\n      \"id\": \"methods\"\n    }}>{`Methods`}</h3>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`ype`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Name`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Description`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Construtor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`AlignedLabelsContainer`}{`(`}{` `}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a new AlignedLabelsContainer without labels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Construtor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`AlignedLabelsContainer`}{`(`}{`String`}{`[`}{`]`}{` labels`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a new AlignedLabelsContainer with the given labels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`Construtor`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`AlignedLabelsContainer`}{`(`}{`String`}{`[`}{`]`}{` labels, int vgap`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Creates a new AlignedLabelsContainer with the given labels and a vertical gap between the labels`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`add`}{`(`}{`Control c`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Since this is an AlignedLabelsContainer, use this to add a label`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`int`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`getLineY`}{`(`}{`int line`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Given a line `}{`(`}{`staring from 0`}{`)`}{`, returns the y position`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}><strong parentName=\"td\">{`void`}</strong></td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`setLabels`}{`(`}{`String`}{`[`}{` `}{`]`}{` labels, int vgap`}{`)`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": \"left\"\n          }}>{`Sets the labels and the extra gap between rows `}{`(`}{`which may be 0`}{`)`}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","module.exports = __webpack_public_path__ + \"static/alignedlabels-sample.gif.pagespeed.ce.d4badoy8p-7786da74ecbc3fe5cbd8fe8a85df4c9f.gif\";"],"sourceRoot":""}