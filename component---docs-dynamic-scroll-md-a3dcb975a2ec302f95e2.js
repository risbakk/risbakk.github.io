(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{"4rcq":function(e,t,a){e.exports=a.p+"static/dynamicscrollcontainer-sample-6db24ac9f477d2c94aced60cf020ef8c.gif"},FMVb:function(e,t,a){"use strict";a.r(t),a.d(t,"_frontmatter",(function(){return c})),a.d(t,"default",(function(){return b}));a("91GP"),a("rGqo"),a("yt8O"),a("Btvt"),a("RW0V"),a("FlsD"),a("q1tI");var n=a("7ljp"),r=a("hhGP");a("qKvR");function o(){return(o=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var a=arguments[t];for(var n in a)Object.prototype.hasOwnProperty.call(a,n)&&(e[n]=a[n])}return e}).apply(this,arguments)}var c={};void 0!==c&&c&&c===Object(c)&&Object.isExtensible(c)&&!c.hasOwnProperty("__filemeta")&&Object.defineProperty(c,"__filemeta",{configurable:!0,value:{name:"_frontmatter",filename:"docs/dynamic-scroll.md"}});var l={_frontmatter:c},i=r.a;function b(e){var t=e.components,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,["components"]);return Object(n.b)(i,o({},l,r,{components:t,mdxType:"MDXLayout"}),Object(n.b)("h1",{id:"dynamic-scroll"},"Dynamic Scroll"),Object(n.b)("h3",{id:"overview"},"Overview"),Object(n.b)("p",null,"Scroll is a specialized type of Scroll Container intended for high performance where hundreds or thousands of views need to be displayed in a scrollable list.â€‹"),Object(n.b)("p",null,'{% hint style="info" %}\nIn Totalcross this component is called ',Object(n.b)("strong",{parentName:"p"},Object(n.b)("inlineCode",{parentName:"strong"},"DynamicScrollContainer")),"\n{% endhint %}"),Object(n.b)("p",null,Object(n.b)("img",{alt:"dynamic scroll",src:a("4rcq")})),Object(n.b)("p",null,'{% hint style="info" %}\nBecause it is a more complex example, which does not only involve the creation of the interface, we have a simpler and more direct example. To access the complete example, just go to our ',Object(n.b)("a",o({parentName:"p"},{href:"https://github.com/TotalCross/TCSample/blob/master/src/main/java/totalcross/sample/components/ui/DynScrollContainerSample.java"}),"github"),".\n{% endhint %}"),Object(n.b)("h3",{id:"source-code"},"Source Code"),Object(n.b)("p",null,'{% code title="DynScrollContainerSample.java" %}'),Object(n.b)("pre",null,Object(n.b)("code",o({parentName:"pre"},{className:"language-java"}),"// Creating and positioning the DynamicScrollContainer\nvsc = new DynamicScrollContainer();\nvsc.setBackColor(Color.WHITE);\nvsc.setBorderStyle(BORDER_SIMPLE);\nadd(vsc, LEFT + gap, AFTER + gap*2, FILL - gap, FILL - gap*2);\n// Adding views to the DynamicScrollContainer\nDynSCTestView view = new DynSCTestView(array[i], font);\nview.height = Settings.screenHeight / 20;\ndatasource.addView(view);\n")),Object(n.b)("p",null,"{% endcode %}"),Object(n.b)("h3",{id:"methods"},"Methods"),Object(n.b)("table",null,Object(n.b)("thead",{parentName:"table"},Object(n.b)("tr",{parentName:"thead"},Object(n.b)("th",o({parentName:"tr"},{align:"left"}),"Type"),Object(n.b)("th",o({parentName:"tr"},{align:"left"}),"Name"),Object(n.b)("th",o({parentName:"tr"},{align:"left"}),"Description"))),Object(n.b)("tbody",{parentName:"table"},Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"Constructor")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"DynamicScrollContainer","("," ",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Creates a empty DynamicScrollContainer.")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"Constructor")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"DynamicScrollContainer","(","DynamicScrollContainer.DataSource datasource",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Creates a DynamicScrollContainer that sets the referred datasource")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"DynamicScrollContainer.AbstractView")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"getTopMostVisibleView","("," ",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Return the top most visible view")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"Boolean")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"isViewVisible","(","DynamicScrollContainer.AbstractView view",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Return true if the view is visible")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"Boolean")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"scrollContent","(","int dx, int dy, boolean fromFlick",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Scroll the DynamicScrollContainer to the referred position. If the boolean is true, it does a flick animation")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"void")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"scrollToView","(","DynamicScrollContainer.AbstractView view",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Scroll the DynamicScrollContainer to the view")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"void")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"setDataSource","(","DynamicScrollContainer.DataSource datasource",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Set the DataSource")),Object(n.b)("tr",{parentName:"tbody"},Object(n.b)("td",o({parentName:"tr"},{align:"left"}),Object(n.b)("strong",{parentName:"td"},"void")),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"stopFlick","(",")"),Object(n.b)("td",o({parentName:"tr"},{align:"left"}),"Stops any flick animation")))))}void 0!==b&&b&&b===Object(b)&&Object.isExtensible(b)&&!b.hasOwnProperty("__filemeta")&&Object.defineProperty(b,"__filemeta",{configurable:!0,value:{name:"MDXContent",filename:"docs/dynamic-scroll.md"}}),b.isMDXComponent=!0}}]);
//# sourceMappingURL=component---docs-dynamic-scroll-md-a3dcb975a2ec302f95e2.js.map